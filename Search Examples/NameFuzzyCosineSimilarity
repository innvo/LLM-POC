import numpy as np
import faiss
from sentence_transformers import SentenceTransformer
import pandas as pd

# Create sample data
person_df = pd.DataFrame({
    "node_id": [1, 2, 3, 4], 
    "name": ["John Smith", "Mary Johnson", "Bob Williams", "Sarah Davis"]
})

# Generate embeddings 
model = SentenceTransformer('all-MiniLM-L6-v2')
person_df["embedding"] = person_df["name"].apply(lambda x: model.encode(x))

# Store in FAISS index
index = faiss.IndexFlatIP(384)  # Change dimension to 384
embeddings = np.stack(person_df['embedding'].values)
index.add(embeddings) 

# Query  
query_name = "John Doe"
query_embedding = model.encode(query_name)
distances, indices = index.search(np.array([query_embedding]), k=2)

print(person_df.iloc[indices[0]]['name'].values[0]) 
# Returns most similar name based on embedding